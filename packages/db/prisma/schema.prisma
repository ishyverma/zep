generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  username String  @unique
  password String
  avatarId String?
  type     Role
  spaces   Space[]
  avatar   Avatar? @relation(fields: [avatarId], references: [id])
}

model Avatar {
  id       String @id @default(cuid())
  imageUrl String
  name     String
  users    User[]
}

model Element {
  id       String          @id @default(cuid())
  width    Int
  height   Int
  imageUrl String
  static   Boolean
  maps     mapElements[]
  spaces   spaceElements[]
}

model Space {
  id          String          @id @default(cuid())
  name        String
  width       Int
  height      Int
  thumbnail   String?
  creatorId   String
  creator     User            @relation(fields: [creatorId], references: [id])
  elements    spaceElements[]
}

model Map {
  id          String        @id @default(cuid())
  width       Int
  height      Int
  name        String
  thumbnail   String
  elements    mapElements[]
}

model spaceElements {
  id        String  @id @default(cuid())
  spaceId   String
  elementId String
  x         Int
  y         Int
  element   Element @relation(fields: [elementId], references: [id])
  space     Space   @relation(fields: [spaceId], references: [id])
}

model mapElements {
  id        String  @id @default(cuid())
  mapId     String
  elementId String
  x         Int
  y         Int
  element   Element @relation(fields: [elementId], references: [id])
  map       Map     @relation(fields: [mapId], references: [id])
}

enum Role {
  user
  admin
}
